{"version":3,"sources":["App.styled.js","redux/contacts/contacts-selectors.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.styled.js","redux/auth/auth-operations.js","redux/modal/modal-actions.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.styled.js","components/AuthNav/AuthNav.js","components/Form/Form.styled.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/Contacts/Contacts.styled.js","components/ListElement/ListElement.styled.js","redux/contacts/contacts-actions.js","redux/modal/modal-selectors.js","components/EditForm/EditForm.js","components/UserData/UserData.js","utils/utils.js","components/Modal/Dialog.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","views/ContactsView/ContactsView.styled.js","views/ContactsView/ContactsView.js","views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.js","views/LoginView/LoginView.styled.js","views/LoginView/LoginView.js","App.js","reportWebVitals.js","redux/contacts/contacts-slice.js","redux/auth/auth-slice.js","redux/contacts/contacts-reducer.js","redux/modal/modal-reducers.js","redux/store.js","index.js"],"names":["Wrapper","styled","div","props","transparent","StyledLoader","Loader","NavWrapper","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","contactsList","normalizedFilter","toLowerCase","trim","name","includes","getVisibleContacts","getLoader","authSelectors","getIsLoggedIn","auth","isLoggedIn","getUserName","user","getUserEmail","email","getUserToken","token","getUserDetails","NavMenu","ul","StyledLink","NavLink","HomeView","to","activeStyle","fontWeight","color","DetailsBtn","button","StyledButton","Button","axios","defaults","baseURL","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","message","Error","mesage","login","authOperations","logout","getContactData","get","actions","openModal","createAction","closeModal","setModalContent","UserMenu","userEmail","useSelector","dispatch","useDispatch","type","onClick","variant","AuthNav","FormSection","form","Label","label","_","rejectWithValue","postContact","deleteContact","id","delete","patchContact","patch","contactsOperations","Form","useState","setName","number","setNumber","handleChange","target","value","resetInput","onSubmit","e","preventDefault","newName","isDouble","find","contact","toast","checkForDouble","onChange","pattern","title","required","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","List","Contact","li","TextWrapper","ButtonWrapper","addFilter","resetFilter","getModalState","modal","modalIsShow","getModalContent","modalContent","EditForm","formData","FormData","formDataObj","Object","fromEntries","entries","Group","as","Row","className","controlId","column","sm","Col","Control","defaultValue","UserData","utils","switchContent","content","Dialog","show","Modal","onHide","Header","closeButton","Title","Body","Contacts","setPatchContact","useEffect","isListEmpty","length","map","modalActions","editContact","Filter","currentTarget","autoComplete","ContactsView","StyledForm","StyledInput","input","RegisterView","setEmail","password","setPassword","placeholder","autoFocus","size","LoginView","history","useHistory","push","App","isLoading","Navigation","path","exact","height","width","timeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createSlice","initialState","extraReducers","fulfilled","action","payload","authSlice","createReducer","combineReducers","rootReducer","contactsReducer","filterReducer","modalReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yRAGaA,EAAUC,IAAOC,IAAV,8GAKhB,IAES,SAAAC,GAAK,OAAKA,EAAMC,YAAc,GAAM,KAGpCC,EAAeJ,YAAOK,IAAPL,CAAH,kFAMZM,EAAaN,IAAOC,IAAV,gJ,QCjBjBM,EAAc,SAAAC,GAAK,OAAIA,EAAMC,UAE7BC,EAAY,SAAAF,GAAK,OAAIA,EAAMG,QAO3BC,EAAsBC,YAAe,CAACH,EAAWH,IAAc,SAACI,EAAQF,GAC5E,IAAIK,EACJ,OAAKH,GACLG,EARyB,SAACL,EAAUE,GACpC,IAAMI,EAAmBJ,EAAOK,cAAcC,OAC9C,OAAOR,EAASE,QAAO,qBAAGO,KAAgBF,cAAcG,SAASJ,MAMlDK,CAAmBX,EAAUE,GACrCG,GAFaL,KAMhBY,EAAY,SAAAb,GAAK,OAAI,GCCZc,EARO,CACpBC,cAXoB,SAAAf,GAAK,OAAIA,EAAMgB,KAAKC,YAYxCC,YAVkB,SAAAlB,GAAK,OAAIA,EAAMgB,KAAKG,KAAKT,MAW3CU,aATmB,SAAApB,GAAK,OAAIA,EAAMgB,KAAKG,KAAKE,OAU5CC,aARmB,SAAAtB,GAAK,OAAIA,EAAMgB,KAAKO,OASvCC,eAPqB,SAAAxB,GAAK,OAAIA,EAAMgB,KAAKG,OCP9BM,EAAUjC,IAAOkC,GAAV,oKAWPC,EAAanC,YAAOoC,IAAPpC,CAAH,4E,OCgBRqC,EA5BE,WACf,OACE,eAACJ,EAAD,WACE,6BACE,cAACE,EAAD,CACEG,GAAG,IACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,oBAUF,6BACE,cAACN,EAAD,CACEG,GAAG,YACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,4B,QCdK1C,EAAUC,IAAOC,IAAV,oFAMPyC,EAAa1C,IAAO2C,OAAV,yLAYVC,EAAe5C,YAAO6C,IAAP7C,CAAH,6G,kDCjBzB8C,IAAMC,SAASC,QADE,wCAGjB,I,+DAAMjB,GAAQ,SACRA,GACFe,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDpB,IAFtDA,GAAQ,WAKVe,IAAMC,SAASE,QAAQC,OAAvB,cAAiD,IAI/CE,GAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAExBT,IAAMU,KAAK,gBAAiBF,GAFJ,uBAEvCG,EAFuC,EAEvCA,KACR1B,GAAU0B,EAAK1B,OAHgC,kBAIxC0B,GAJwC,sCAM/CC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMC,QAPyB,yDAAlB,uDAW3BC,GAAQV,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAElBT,IAAMU,KAAK,cAAeF,GAFR,uBAEjCG,EAFiC,EAEjCA,KACR1B,GAAU0B,EAAK1B,OAH0B,kBAIlC0B,GAJkC,sCAMzCC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SAPmB,yDAAf,uDAgCjBI,GAAiB,CAC5BZ,YACAW,SACAE,OAxBaZ,YAAiB,cAAD,sBAAgB,sBAAAE,EAAA,+EAErCT,IAAMU,KAAK,iBAF0B,OAG3CzB,KAH2C,sDAK3C2B,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SANqB,0DAyB7CM,eAfqBb,YAAiB,sBAAD,sBAAwB,8BAAAE,EAAA,+EAEpCT,IAAMqB,IAAI,kBAF0B,uBAEnDV,EAFmD,EAEnDA,KAFmD,kBAIpDA,GAJoD,sCAM3DC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SAPqC,2DAkBhDI,MCrDAI,GANC,CACdC,UALgBC,YAAa,cAM7BC,WALiBD,YAAa,eAM9BE,gBALsBF,YAAa,qBCmCtBG,GA/BE,WACf,IAAMC,EAAYC,YAAYrD,EAAcM,cACtCH,EAAakD,YAAYrD,EAAcQ,cACvCC,EAAQ4C,YAAYrD,EAAcQ,cAClC8C,EAAWC,cAWjB,OACE,mCACGpD,GACC,eAAC,EAAD,WACE,cAACiB,EAAD,CAAYoC,KAAK,SAASC,QATlB,WACdH,EAASZ,GAAeE,kBACxBU,EAASR,GAAQI,gBAAgB,aACjCI,EAASR,GAAQC,cAMX,SACGK,IAEH,cAAC9B,EAAD,CAAcoC,QAAQ,QAAQF,KAAK,SAASC,QAhBhC,WAClBH,EAASZ,GAAeC,OAAOlC,KAezB,2BC3BGI,GAAanC,YAAOoC,IAAPpC,CAAH,4EAKViC,GAAUjC,IAAOkC,GAAV,mFCwBL+C,GA7BC,WACd,OACE,eAAC,GAAD,WACE,6BACE,cAAC,GAAD,CACE3C,GAAG,SACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,qBAUF,6BACE,cAAC,GAAD,CACEH,GAAG,YACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,4B,kBChBKyC,I,OAAclF,IAAOmF,KAAV,gQACpB,KASSC,GAAQpF,IAAOqF,MAAV,uHCTZ9E,GAAc8C,YAAiB,eAAD,uCAAiB,WAAOiC,EAAP,sBAAA/B,EAAA,6DAAYgC,EAAZ,EAAYA,gBAAZ,kBAE1BzC,IAAMqB,IAAI,aAFgB,uBAEzCV,EAFyC,EAEzCA,KAFyC,kBAG1CA,GAH0C,yDAK1C8B,EAAgB,EAAD,KAL2B,yDAAjB,yDAS9BC,GAAcnC,YAAiB,gBAAD,uCAAkB,WAAOC,EAAP,sBAAAC,EAAA,6DAAsBgC,EAAtB,EAAsBA,gBAAtB,kBAE3BzC,IAAMU,KAAK,YAAaF,GAFG,uBAE1CG,EAF0C,EAE1CA,KAF0C,kBAG3CA,GAH2C,uCAKlDC,QAAQC,IAAI,KAAMC,SALgC,kBAM3C2B,EAAgB,EAAD,KAN4B,yDAAlB,yDAU9BE,GAAgBpC,YAAiB,kBAAD,uCAAoB,WAAOqC,EAAP,kBAAAnC,EAAA,6DAAagC,EAAb,EAAaA,gBAAb,kBAEhDzC,IAAM6C,OAAN,oBAA0BD,IAFsB,gCAG/CA,GAH+C,uCAKtDhC,QAAQC,IAAI,KAAMC,SALoC,kBAM/C2B,EAAgB,EAAD,KANgC,yDAApB,yDAUhCK,GAAevC,YACnB,iBADmC,uCAGnC,WAAMC,GAAN,mBAAAC,EAAA,sEAEYmC,EAAOpC,EAAPoC,UACDpC,EAAYoC,GAHvB,SAM2B5C,IAAM+C,MAAN,oBAAyBH,GAAMpC,GAN1D,uBAMYG,EANZ,EAMYA,KACRC,QAAQC,IAAIF,GAPhB,kBAQWA,GARX,wCAUIC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SAX1B,0DAHmC,uDA0BtBkC,GAPY,CACzBvF,eACAiF,eACAC,iBACAG,iBC0CaG,GAxFF,WACX,MAAwBC,mBAAS,IAAjC,oBAAO9E,EAAP,KAAa+E,EAAb,KACA,EAA4BD,mBAAS,IAArC,oBAAOE,EAAP,KAAeC,EAAf,KACMvB,EAAWC,cAEXpE,EAAWkE,YAAYpE,GAEvB6F,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUnF,EAAoB,EAApBA,KAAMoF,EAAc,EAAdA,MACtC,OAAQpF,GACN,IAAK,OACH+E,EAAQK,GACR,MACF,IAAK,SACHH,EAAUG,GACV,MACF,QACE,SAIAC,EAAa,WACjBN,EAAQ,IACRE,EAAU,KAuBZ,OACE,eAACjB,GAAD,CAAasB,SAfM,SAAAC,GACnBA,EAAEC,iBAPmB,SAACC,EAASlG,GAC/B,IAAMmG,EAAWnG,EAASoG,MAAK,SAAAC,GAAO,OAAIA,EAAQ5F,OAASyF,KAE3D,OADIC,GAAUG,aAAM,GAAD,OAAIJ,EAAJ,4BACZC,EAMHI,CAAe9F,EAAMT,KAKzBmE,EAASkB,GAAmBN,YAAY,CAAEtE,OAAMgF,YAChDtB,EAASkB,GAAmBvF,gBAL1BgG,KAWF,UACE,8CACA,eAACnB,GAAD,kBAEE,uBACE6B,SAAUb,EACVE,MAAOpF,EACP4D,KAAK,OACL5D,KAAK,OACLgG,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,eAAChC,GAAD,oBAEE,uBACE6B,SAAUb,EACVtB,KAAK,MACL5D,KAAK,SACLoF,MAAOJ,EACPgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACvE,EAAA,EAAD,CAAQiC,KAAK,SAAb,yBACA,cAAC,KAAD,CACEuC,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,Q,SCxFPC,GAAO9H,IAAOkC,GAAV,kJAWJnC,GAAUC,IAAOC,IAAV,iPASP2C,GAAe5C,YAAO6C,IAAP7C,CAAH,sDCXZ+H,IAVS/H,IAAO2C,OAAV,2IAUI3C,IAAOgI,GAAV,mGAMPC,GAAcjI,IAAOC,IAAV,yIAQXiI,GAAgBlI,IAAOC,IAAV,8DCxBbkI,GAAY7D,YAAa,cACzB8D,GAAc9D,YAAa,gB,kBCH3B+D,GAAgB,SAAA7H,GAAK,OAAIA,EAAM8H,MAAMC,aAErCC,GAAkB,SAAAhI,GAAK,OAAIA,EAAM8H,MAAMG,c,2BC+CrCC,GAxCE,SAAC,GAAiB,IAAf5B,EAAc,EAAdA,QACZlC,EAAWC,cAETa,EAAqBoB,EAArBpB,GAAIxE,EAAiB4F,EAAjB5F,KAAMgF,EAAWY,EAAXZ,OAWlB,OACE,eAAC,KAAD,CAAMM,SAXc,SAAAC,GACpBA,EAAEC,iBACF,IAAMiC,EAAW,IAAIC,SAASnC,EAAEJ,QAC9BwC,EAAcC,OAAOC,YAAYJ,EAASK,WAC5CH,EAAYnD,GAAKA,EAEjBd,EAASkB,GAAmBF,aAAaiD,IACzCjE,EAASR,GAAQG,eAIjB,UACE,eAAC,KAAK0E,MAAN,CAAYC,GAAIC,KAAKC,UAAU,OAAOC,UAAU,oBAAhD,UACE,cAAC,KAAKjE,MAAN,CAAYkE,QAAM,EAACC,GAAG,IAAtB,kBAGA,cAACC,GAAA,EAAD,CAAKD,GAAG,KAAR,SACE,cAAC,KAAKE,QAAN,CAAcC,aAAcxI,EAAMA,KAAK,cAI3C,eAAC,KAAK+H,MAAN,CAAYC,GAAIC,KAAKC,UAAU,OAAOC,UAAU,sBAAhD,UACE,cAAC,KAAKjE,MAAN,CAAYkE,QAAM,EAACC,GAAG,IAAtB,mBAGA,cAACC,GAAA,EAAD,CAAKD,GAAG,KAAR,SACE,cAAC,KAAKE,QAAN,CAAc3E,KAAK,MAAM4E,aAAcxD,EAAQhF,KAAK,gBAGxD,cAAC2B,EAAA,EAAD,CAAQmC,QAAQ,UAAUF,KAAK,SAA/B,8BCvBS6E,GAhBE,WACf,IAAMlG,EAAOkB,YAAYrD,EAAcU,gBAC/Bd,EAAgBuC,EAAhBvC,KAAMW,EAAU4B,EAAV5B,MAEd,OACE,gCACE,4BACE,4BAAIX,MAEN,4BACE,4BAAIW,UCAG+H,GAFD,CAAEC,cAXM,SAAAC,GACpB,OAAQA,GACN,IAAK,WACH,MAAO,OACT,IAAK,WACH,MAAO,OACT,QACE,OAAO,QCwCEC,GAtCA,SAAC,GAAiB,IAAfjD,EAAc,EAAdA,QACVkD,EAAOrF,YAAY0D,IACnBI,EAAe9D,YAAY6D,IAC3B5D,EAAWC,cASI+E,GAAMC,cAAcpB,GAEzC,OADA/E,QAAQC,IAAIiG,GAAMC,cAAcpB,IAE9B,mCACE,eAACwB,GAAA,EAAD,CAAOD,KAAMA,EAAME,OARH,WAHVtF,GAIA,EAJSR,GAAQC,YAAwBD,GAAQG,eAWvD,UACE,cAAC0F,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMI,MAAP,UACyC,SAAtCT,GAAMC,cAAcpB,GACnB,kDAEA,oDAIN,cAACwB,GAAA,EAAMK,KAAP,UACyC,SAAtCV,GAAMC,cAAcpB,GACnB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAU3B,QAASA,YC2ChByD,GApEE,WACf,MAAwCvE,mBAAS,IAAjD,oBAAOJ,EAAP,KAAqB4E,EAArB,KACM5F,EAAWC,cAEjB4F,qBAAU,WACR7F,EAASkB,GAAmBvF,iBAC3B,CAACqE,IAEJ,IAAM9D,EAAe6D,YAAY/D,GAgB3B8J,EAAsC,IAAxB5J,EAAa6J,OACjC,OACE,eAAC,GAAD,WACGD,GAAe,mEAChB,cAAC5C,GAAD,UACGhH,GACCA,EAAa8J,KAAI,gBAAG1J,EAAH,EAAGA,KAAMgF,EAAT,EAASA,OAAQR,EAAjB,EAAiBA,GAAjB,OACf,eAACqC,GAAD,WACE,eAACE,GAAD,WAEG/G,EAFH,KAEWgF,KAEX,eAACgC,GAAD,WACE,cAAC,GAAD,CACEpD,KAAK,SACLC,QAAS,kBAtBL,SAAC,GAA0B,IAAxBW,EAAuB,EAAvBA,GAAIxE,EAAmB,EAAnBA,KAAMgF,EAAa,EAAbA,OAI/B,OAHAsE,EAAgB,CAAE9E,KAAIxE,OAAMgF,WAC5BtB,EAASiG,GAAarG,gBAAgB,aACtCI,EAASiG,GAAaxG,aACfuB,EAkBsBkF,CAAY,CAAEpF,KAAIxE,OAAMgF,YACvClB,QAAQ,UAHV,SAKE,cAAC,KAAD,MAEF,cAACnC,EAAA,EAAD,CAAQiC,KAAK,SAASC,QAAS,kBAjCvB,SAAAW,GACpBd,EAASR,MACTQ,EAASkB,GAAmBL,cAAcC,IAC1Cd,EAASkB,GAAmBvF,eA8BqBkF,CAAcC,IAAKV,QAAQ,UAAhE,SACE,cAAC,KAAD,WAdQU,QAqBpB,cAAC,GAAD,CAAQoB,QAASlB,QChEVR,GAAQpF,IAAOqF,MAAV,2GAOLtF,GAAUC,IAAOC,IAAV,kQAChB,ICiBW8K,GArBA,WACb,IAAMpK,EAASgE,YAAYjE,GACrBkE,EAAWC,cAEjB,OACE,eAAC,GAAD,WACE,8CACA,cAAC,GAAD,UACE,uBACEC,KAAK,OACL5D,KAAK,SACL+F,SAAU,SAAAR,GAAC,OAAI7B,EAASR,GAAkBqC,EAAEuE,cAAc1E,SAC1DA,MAAO3F,EACPsK,aAAa,cCjBVlL,GAAUC,IAAOC,IAAV,8GCgBLiL,GAbM,WACnB,OACE,eAAC,GAAD,WAEE,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,QCXOC,GAAanL,IAAOmF,KAAV,kfAmBViG,GAAcpL,IAAOqL,MAAV,kFC+CTC,IDzCUtL,IAAO2C,OAAV,yhBAUlB,GAEA,ICjCiB,WACnB,MAAwBqD,mBAAS,IAAjC,oBAAO9E,EAAP,KAAa+E,EAAb,KACA,EAA0BD,mBAAS,IAAnC,oBAAOnE,EAAP,KAAc0J,EAAd,KACA,EAAgCvF,mBAAS,IAAzC,oBAAOwF,EAAP,KAAiBC,EAAjB,KACM7G,EAAWC,cAEXuB,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUnF,EAAoB,EAApBA,KAAMoF,EAAc,EAAdA,MACtC,OAAQpF,GACN,IAAK,OACH,OAAO+E,EAAQK,GACjB,IAAK,QACH,OAAOiF,EAASjF,GAClB,IAAK,WACH,OAAOmF,EAAYnF,GACrB,QACE,SAaN,OACE,eAAC6E,GAAD,CAAY3E,SAVO,SAAAC,GACnBA,EAAEC,iBAEF9B,EAASZ,GAAeZ,SAAS,CAAElC,OAAMW,QAAO2J,cAChDvF,EAAQ,IACRsF,EAAS,IACTE,EAAY,KAIZ,UACE,cAACL,GAAD,CACEtG,KAAK,OACL5D,KAAK,OACLwK,YAAY,YACZC,WAAS,EACT1E,SAAUb,EACVE,MAAOpF,EACPkG,UAAQ,IAEV,cAACgE,GAAD,CACEtG,KAAK,QACL5D,KAAK,QACLwK,YAAY,aACZzE,SAAUb,EACVE,MAAOzE,EACPuF,UAAQ,IAEV,cAACgE,GAAD,CACEtG,KAAK,WACL5D,KAAK,WACLwK,YAAY,oBACZzE,SAAUb,EACVE,MAAOkF,EACPpE,UAAQ,IAEV,cAACvE,EAAA,EAAD,CAAQiC,KAAK,SAAS8G,KAAK,KAA3B,2BC3DOT,GAAanL,IAAOmF,KAAV,kfAmBViG,GAAcpL,IAAOqL,MAAV,kFCsCTQ,IDhCU7L,IAAO2C,OAAV,yhBAUlB,GAEA,IChCc,WAChB,MAA0BqD,mBAAS,IAAnC,oBAAOnE,EAAP,KAAc0J,EAAd,KACA,EAAgCvF,mBAAS,IAAzC,oBAAOwF,EAAP,KAAiBC,EAAjB,KACM7G,EAAWC,cAEXiH,EAAUC,cAEV3F,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUnF,EAAoB,EAApBA,KAAMoF,EAAc,EAAdA,MACtC,OAAQpF,GACN,IAAK,QACH,OAAOqK,EAASjF,GAClB,IAAK,WACH,OAAOmF,EAAYnF,GACrB,QACE,SAaN,OACE,eAAC,GAAD,CAAYE,SAVO,SAAAC,GACnBA,EAAEC,iBACF9B,EAASZ,GAAeD,MAAM,CAAElC,QAAO2J,cACvCD,EAAS,IACTE,EAAY,IAEZK,EAAQE,KAAK,cAIb,UACE,cAAC,GAAD,CACElH,KAAK,QACL5D,KAAK,QACLwK,YAAY,QACZC,WAAS,EACT1E,SAAUb,EACVE,MAAOzE,EACPuF,UAAQ,IAEV,cAAC,GAAD,CACEtC,KAAK,WACL5D,KAAK,WACLwK,YAAY,WACZzE,SAAUb,EACVE,MAAOkF,EACPpE,UAAQ,IAEV,cAACvE,EAAA,EAAD,CAAQiC,KAAK,SAAS8G,KAAK,KAA3B,wBCZSK,GA3BH,WACV,IAAMC,EAAYvH,YAAYtD,GACxBI,EAAakD,YAAYrD,EAAcC,eAE7C,OACE,eAACxB,EAAD,CAASI,YAAa+L,EAAtB,UACE,eAAC5L,EAAD,WACE,cAAC6L,EAAD,IACC1K,EAAa,cAAC,GAAD,IAAe,cAAC,GAAD,OAE/B,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2K,KAAK,IAAIC,OAAK,EAArB,SACE,6CAEF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,UAAuBF,GAAa,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOE,KAAK,YAAZ,SAAyB3K,GAAc,cAAC,GAAD,SAExCyK,GACC,cAAC9L,EAAD,CAAc0E,KAAK,YAAYrC,MAAM,UAAU6J,OAAQ,IAAKC,MAAO,IAAKC,QAAS,UCvB1EC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCoBCjM,GAtBEyM,YAAY,CAC3BhM,KAAM,WACNiM,aAJmB,GAKnBC,eAAa,sBACVtH,GAAmBvF,YAAY8M,WADrB,SACgC7M,EAAO8M,GAChD,OAAOA,EAAOC,WAFL,gBAKVzH,GAAmBN,YAAY6H,WALrB,SAKgC7M,EAAO8M,GAChD,MAAM,GAAN,oBAAW9M,GAAX,CAAkB8M,EAAOC,aANhB,gBASVzH,GAAmBL,cAAc4H,WATvB,SASkC7M,EAAO8M,GAClD,OAAO9M,EAAMG,QAAO,qBAAG+E,KAAgB4H,EAAOC,cAVrC,gBAYVzH,GAAmBF,aAAayH,WAZtB,SAYiC7M,EAAO8M,GACjD,MAAM,GAAN,oBAAW9M,EAAMG,QAAO,qBAAG+E,KAAgB4H,EAAOC,QAAQ7H,OAA1D,CAA+D4H,EAAOC,aAb7D,MAmBf,QCOeC,GAzBGN,YAAY,CAC5BhM,KAAM,OACNiM,aARmB,CACnBxL,KAAM,CAAET,KAAM,KAAMW,MAAO,MAC3BE,MAAO,KACPN,YAAY,GAMZ2L,eAAa,sBACVpJ,GAAeZ,SAASiK,WADd,SACyB7M,EAAO8M,GACzC9M,EAAMmB,KAAO2L,EAAOC,QAAQ5L,KAC5BnB,EAAMuB,MAAQuL,EAAOC,QAAQxL,MAC7BvB,EAAMiB,YAAa,KAJV,gBAMVuC,GAAeD,MAAMsJ,WANX,SAMsB7M,EAAO8M,GACtC9M,EAAMmB,KAAO2L,EAAOC,QAAQ5L,KAC5BnB,EAAMuB,MAAQuL,EAAOC,QAAQxL,MAC7BvB,EAAMiB,YAAa,KATV,gBAWVuC,GAAeC,OAAOoJ,WAXZ,SAWuB7M,EAAO8M,GACvC9M,EAAMmB,KAAO,CAAET,KAAM,KAAMW,MAAO,MAClCrB,EAAMuB,MAAQ,KACdvB,EAAMiB,YAAa,KAdV,gBAgBVuC,GAAeE,eAAemJ,WAhBpB,SAgB+B7M,EAAO8M,GAC/C9M,EAAMmB,KAAO2L,EAAOC,WAjBX,MAsBf,QCReE,eAAc,IAAD,sBACzBrJ,IAAoB,SAACkB,EAAD,YAAMiI,WADD,gBAEzBnJ,IAAsB,iBAAM,MAFH,KCtBtBmE,GAAckF,aAAc,GAAD,mBAAC,GAC/BrJ,GAAQC,WAAY,kBAAM,KADI,aAAC,GAE/BD,GAAQG,YAAa,kBAAM,KAFG,KAK3BkE,GAAegF,YAAc,GAAD,gBAC/BrJ,GAAQI,iBAAkB,SAAChE,EAAD,YAAU+M,YAGxBG,gBAAgB,CAC7BnF,eACAE,kBCRIkF,GAAcD,aAAgB,CAClCjN,SAAUmN,GACVjN,OAAQkN,GACRrM,KAAMgM,GACNlF,MAAOwF,KAGMC,eAAe,CAC5BC,QAASL,KCNXM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAG1B7B,M","file":"static/js/main.aeeaf1ed.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport Loader from 'react-loader-spinner';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 80%;\n  margin: auto;\n\n  ${'' /* border: 1px solid #001569; */}\n\n  opacity: ${props => (props.transparent ? 0.5 : 1)};\n`;\n\nexport const StyledLoader = styled(Loader)`\n  position: absolute;\n  top: 100px;\n  left: 100px;\n`;\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n\n  border-bottom: 1px solid #2b4054;\n`;\n","import { createSelector } from 'reselect';\n\nconst getContacts = state => state.contacts;\n\nconst getFilter = state => state.filter;\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst getFilteredContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\n  let contactsList = [];\n  if (!filter) return contacts;\n  contactsList = getVisibleContacts(contacts, filter);\n  return contactsList;\n});\n\n// const getLoader = state => state.contacts.isLoading;\nconst getLoader = state => false;\n\nexport { getFilteredContacts, getFilter, getContacts, getLoader };\n","import { createSelector } from 'reselect';\n\nconst getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getUserEmail = state => state.auth.user.email;\n\nconst getUserToken = state => state.auth.token;\n\nconst getUserDetails = state => state.auth.user;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getUserEmail,\n  getUserToken,\n  getUserDetails,\n};\n\nexport default authSelectors;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavMenu = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: bold;\n`;\n","import { NavMenu, StyledLink } from './Navigation.styled';\n\nconst HomeView = () => {\n  return (\n    <NavMenu>\n      <li>\n        <StyledLink\n          to=\"/\"\n          activeStyle={{\n            fontWeight: 'bold',\n            color: '#024ab5',\n          }}\n        >\n          Home\n        </StyledLink>\n      </li>\n      <li>\n        <StyledLink\n          to=\"/contacts\"\n          activeStyle={{\n            fontWeight: 'bold',\n            color: '#024ab5',\n          }}\n        >\n          Contacts\n        </StyledLink>\n      </li>\n    </NavMenu>\n  );\n};\nexport default HomeView;\n","import styled from '@emotion/styled';\nimport Button from 'react-bootstrap/Button';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const DetailsBtn = styled.button`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: #0d6efd;\n\n  border: none;\n  background-color: transparent;\n  :hover {\n    color: #343aeb;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  :hover,\n  :focus {\n    background-color: #7aaffd;\n    color: #ffffff;\n  }\n`;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst newLocal = 'https://connections-api.herokuapp.com';\naxios.defaults.baseURL = newLocal;\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common['Authorization'] = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(error.mesage);\n  }\n});\n\nconst login = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n});\n\nconst logout = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n});\n\nconst getContactData = createAsyncThunk('auth/getContactData', async () => {\n  try {\n    const { data } = await axios.get('/users/current');\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(error.message);\n  }\n});\n\nexport const authOperations = {\n  register,\n  login,\n  logout,\n  getContactData,\n};\n\nexport default authOperations;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst openModal = createAction('modal/open');\nconst closeModal = createAction('modal/close');\nconst setModalContent = createAction('modal/setContent');\n\nconst actions = {\n  openModal,\n  closeModal,\n  setModalContent,\n};\n\nexport default actions;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport { Wrapper, DetailsBtn, StyledButton } from './UserMenu.styled';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport actions from '../../redux/modal/modal-actions';\n\nconst UserMenu = () => {\n  const userEmail = useSelector(authSelectors.getUserEmail);\n  const isLoggedIn = useSelector(authSelectors.getUserToken);\n  const token = useSelector(authSelectors.getUserToken);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(authOperations.logout(token));\n  };\n\n  const getData = () => {\n    dispatch(authOperations.getContactData());\n    dispatch(actions.setModalContent('userData'));\n    dispatch(actions.openModal());\n  };\n  return (\n    <>\n      {isLoggedIn && (\n        <Wrapper>\n          <DetailsBtn type=\"button\" onClick={getData}>\n            {userEmail}\n          </DetailsBtn>\n          <StyledButton variant=\"light\" type=\"button\" onClick={handleClick}>\n            Log out\n          </StyledButton>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default UserMenu;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: bold;\n`;\n\nexport const NavMenu = styled.ul`\n  display: flex;\n  gap: 20px;\n\n  list-style: none;\n`;\n","import axios from 'axios';\nimport { NavMenu, StyledLink } from './AuthNav.styled';\n\nconst AuthNav = () => {\n  return (\n    <NavMenu>\n      <li>\n        <StyledLink\n          to=\"/login\"\n          activeStyle={{\n            fontWeight: 'bold',\n            color: '#024ab5',\n          }}\n        >\n          Login\n        </StyledLink>\n      </li>\n      <li>\n        <StyledLink\n          to=\"/register\"\n          activeStyle={{\n            fontWeight: 'bold',\n            color: '#024ab5',\n          }}\n        >\n          Register\n        </StyledLink>\n      </li>\n    </NavMenu>\n  );\n};\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\n\nexport const FormSection = styled.form`\n  ${'' /* width: 40%; */}\n  margin-bottom: 50px;\n  padding: 20px;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n`;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst getContacts = createAsyncThunk('contacts/get', async (_, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.get('/contacts');\n    return data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\n\nconst postContact = createAsyncThunk('contacts/post', async (credentials, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post('/contacts', credentials);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    return rejectWithValue(error);\n  }\n});\n\nconst deleteContact = createAsyncThunk('contacts/delete', async (id, { rejectWithValue }) => {\n  try {\n    await axios.delete(`/contacts/${id}`);\n    return id;\n  } catch (error) {\n    console.log(error.message);\n    return rejectWithValue(error);\n  }\n});\n\nconst patchContact = createAsyncThunk(\n  'contacts/patch',\n\n  async credentials => {\n    try {\n      const { id } = credentials;\n      delete credentials.id;\n      // console.log(credentials, id);\n\n      const { data } = await axios.patch(`/contacts/${id}`, credentials);\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n      throw new Error(error.message);\n    }\n  },\n);\n\nconst contactsOperations = {\n  getContacts,\n  postContact,\n  deleteContact,\n  patchContact,\n};\n\nexport default contactsOperations;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Label, FormSection } from './Form.styled';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkForDouble = (newName, contacts) => {\n    const isDouble = contacts.find(contact => contact.name === newName);\n    if (isDouble) toast(`${newName} is already in contacts`);\n    return isDouble;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkForDouble(name, contacts)) {\n      resetInput();\n      return;\n    }\n\n    dispatch(contactsOperations.postContact({ name, number }));\n    dispatch(contactsOperations.getContacts());\n\n    resetInput();\n  };\n\n  return (\n    <FormSection onSubmit={handleSubmit}>\n      <h2>Add contacts</h2>\n      <Label>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </FormSection>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\nimport Button from 'react-bootstrap/Button';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  font-size: 18px;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  width: 60%;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const StyledButton = styled(Button)`\n  vertical-align: super;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 120px;\n\n  transition: all 250ms ease;\n  &:hover,\n  :focus {\n    background-color: skyblue;\n  }\n`;\n\nexport const Contact = styled.li`\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  justify-content: space-between;\n  width: 250px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addFilter = createAction('filter/add');\nexport const resetFilter = createAction('filter/reset');\n","export const getModalState = state => state.modal.modalIsShow;\n\nexport const getModalContent = state => state.modal.modalContent;\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nimport { useDispatch } from 'react-redux';\nimport actions from '../../redux/modal/modal-actions';\n\nconst EditForm = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const { id, name, number } = contact;\n  const handleChanges = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target),\n      formDataObj = Object.fromEntries(formData.entries());\n    formDataObj.id = id;\n\n    dispatch(contactsOperations.patchContact(formDataObj));\n    dispatch(actions.closeModal());\n  };\n\n  return (\n    <Form onSubmit={handleChanges}>\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextName\">\n        <Form.Label column sm=\"2\">\n          Name\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control defaultValue={name} name=\"name\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextNumber\">\n        <Form.Label column sm=\"2\">\n          Phone\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control type=\"tel\" defaultValue={number} name=\"number\" />\n        </Col>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Save Changes\n      </Button>\n    </Form>\n  );\n};\n\nexport default EditForm;\n","import { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst UserData = () => {\n  const data = useSelector(authSelectors.getUserDetails);\n  const { name, email } = data;\n  // console.log(name, email);\n  return (\n    <div>\n      <p>\n        <i>{name}</i>\n      </p>\n      <p>\n        <i>{email}</i>\n      </p>\n    </div>\n  );\n};\n\nexport default UserData;\n","const switchContent = content => {\n  switch (content) {\n    case 'userData':\n      return 'data';\n    case 'editForm':\n      return 'form';\n    default:\n      return null;\n  }\n};\n\nconst utils = { switchContent };\n\nexport default utils;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getModalState, getUserDetails, getModalContent } from '../../redux/modal/modal-selectors';\nimport actions from '../../redux/modal/modal-actions';\nimport EditForm from '../EditForm/EditForm';\nimport UserData from '../UserData';\nimport utils from '../../utils';\n\nconst Dialog = ({ contact }) => {\n  const show = useSelector(getModalState);\n  const modalContent = useSelector(getModalContent);\n  const dispatch = useDispatch();\n  const setShow = value => {\n    value ? dispatch(actions.openModal()) : dispatch(actions.closeModal());\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const isDataRender = utils.switchContent(modalContent) === 'data';\n  console.log(utils.switchContent(modalContent));\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {utils.switchContent(modalContent) === 'data' ? (\n              <span>User's Details</span>\n            ) : (\n              <span>Edit Contact</span>\n            )}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {utils.switchContent(modalContent) === 'data' ? (\n            <UserData />\n          ) : (\n            <EditForm contact={contact} />\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default Dialog;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RiDeleteBin5Fill, RiEditLine } from 'react-icons/ri';\nimport { List, Wrapper, StyledButton } from './Contacts.styled';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { Contact, TextWrapper, ButtonWrapper } from '../ListElement/ListElement.styled';\nimport Button from 'react-bootstrap/Button';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport Dialog from '../Modal';\nimport { getModalState } from '../../redux/modal/modal-selectors';\nimport modalActions from '../../redux/modal/modal-actions';\n\nconst Contacts = () => {\n  const [patchContact, setPatchContact] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const contactsList = useSelector(getFilteredContacts);\n  // const showModal = useSelector(getModalState);\n\n  const deleteContact = id => {\n    dispatch(actions.resetFilter());\n    dispatch(contactsOperations.deleteContact(id));\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const editContact = ({ id, name, number }) => {\n    setPatchContact({ id, name, number });\n    dispatch(modalActions.setModalContent('editForm'));\n    dispatch(modalActions.openModal());\n    return patchContact;\n  };\n\n  const isListEmpty = contactsList.length === 0;\n  return (\n    <Wrapper>\n      {isListEmpty && <p>Your contacts List is still empty.</p>}\n      <List>\n        {contactsList &&\n          contactsList.map(({ name, number, id }) => (\n            <Contact key={id}>\n              <TextWrapper>\n                {/* <FaUser /> */}\n                {name}: {number}\n              </TextWrapper>\n              <ButtonWrapper>\n                <StyledButton\n                  type=\"button\"\n                  onClick={() => editContact({ id, name, number })}\n                  variant=\"primary\"\n                >\n                  <RiEditLine />\n                </StyledButton>\n                <Button type=\"button\" onClick={() => deleteContact(id)} variant=\"primary\">\n                  <RiDeleteBin5Fill />\n                </Button>\n              </ButtonWrapper>\n            </Contact>\n          ))}\n      </List>\n      {/* <Dialog contact={patchContact} isShow={showModal} hideModal={hideModal} /> */}\n      <Dialog contact={patchContact} />\n    </Wrapper>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  btnDelete: PropTypes.func,\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  padding-top: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  ${'' /* width: 40%; */}\n  margin-bottom: 50px;\n  padding: 20px;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n","import { BiSearchAlt } from 'react-icons/bi';\nimport { Label, Wrapper } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { getFilter, getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <h3>Find contact</h3>\n      <Label>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => dispatch(actions.addFilter(e.currentTarget.value))}\n          value={filter}\n          autoComplete=\"off\"\n        />\n        {/* <BiSearchAlt size=\"18\" /> */}\n      </Label>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-start;\n`;\n","import Form from '../../components/Form';\nimport Contacts from '../../components/Contacts';\nimport Filter from '../../components/Filter';\nimport { Wrapper } from './ContactsView.styled';\n\nconst ContactsView = () => {\n  return (\n    <Wrapper>\n      {/* <h2>Contacts</h2> */}\n      <div>\n        <Filter />\n        <Form />\n      </div>\n      <Contacts />\n    </Wrapper>\n  );\n};\n\nexport default ContactsView;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 60px;\n  padding-bottom: 40px;\n  margin-top: 60px;\n  margin-left: auto;\n  margin-right: auto;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\nexport const StyledInput = styled.input`\n  width: 80%;\n  font-size: 20px;\n  padding: 5px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 20px;\n  padding-right: 20px;\n  font-size: 20px;\n\n  transition: all 250ms ease;\n\n  border-radius: 4px;\n  ${'' /* border: 1px solid #2b4054; */}\n  border: none;\n  ${'' /* outline: none; */}\n  background-color: #ffffff;\n\n  -webkit-box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n\n  :hover {\n    background-color: #2c7dc9;\n    color: #ffffff;\n    border-color: #2c7dc9;\n  }\n`;\n","import { StyledForm, StyledInput, StyledBtn } from './RegisterView.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth/auth-operations';\nimport Button from 'react-bootstrap/Button';\n\nconst RegisterView = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        autoFocus\n        onChange={handleChange}\n        value={name}\n        required\n      />\n      <StyledInput\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        onChange={handleChange}\n        value={email}\n        required\n      />\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Create a password\"\n        onChange={handleChange}\n        value={password}\n        required\n      />\n      <Button type=\"submit\" size=\"lg\">\n        Register\n      </Button>\n    </StyledForm>\n  );\n};\n\nexport default RegisterView;\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 60px;\n  padding-bottom: 40px;\n  margin-top: 60px;\n  margin-left: auto;\n  margin-right: auto;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\nexport const StyledInput = styled.input`\n  width: 80%;\n  font-size: 20px;\n  padding: 5px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 20px;\n  padding-right: 20px;\n  font-size: 20px;\n\n  transition: all 250ms ease;\n\n  border-radius: 4px;\n  ${'' /* border: 1px solid #2b4054; */}\n  border: none;\n  ${'' /* outline: none; */}\n  background-color: #ffffff;\n\n  -webkit-box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 2px 5px 2px rgba(34, 60, 80, 0.2);\n\n  :hover {\n    background-color: #2c7dc9;\n    color: #ffffff;\n    border-color: #2c7dc9;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { StyledForm, StyledInput, StyledBtn } from './LoginView.styled';\nimport Button from 'react-bootstrap/Button';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\n\nconst LoginView = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.login({ email, password }));\n    setEmail('');\n    setPassword('');\n\n    history.push('/contacts');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"email\"\n        autoFocus\n        onChange={handleChange}\n        value={email}\n        required\n      />\n      <StyledInput\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"password\"\n        onChange={handleChange}\n        value={password}\n        required\n      />\n      <Button type=\"submit\" size=\"lg\">\n        Login\n      </Button>\n    </StyledForm>\n  );\n};\nexport default LoginView;\n","import { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport { Wrapper, StyledLoader, NavWrapper } from './App.styled';\nimport { getLoader } from './redux/contacts/contacts-selectors';\nimport authSelectors from './redux/auth/auth-selectors';\nimport Navigation from './components/Navigation';\nimport UserMenu from './components/UserMenu/UserMenu';\nimport AuthNav from './components/AuthNav/AuthNav';\nimport ContactsView from './views/ContactsView';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\n\nconst App = () => {\n  const isLoading = useSelector(getLoader);\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Wrapper transparent={isLoading}>\n      <NavWrapper>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\n      </NavWrapper>\n      <Switch>\n        <Route path=\"/\" exact>\n          <h1>Phonebook</h1>\n        </Route>\n        <Route path=\"/register\">\n          <RegisterView />\n        </Route>\n        <Route path=\"/login\">{!isLoading && <LoginView />}</Route>\n        <Route path=\"/contacts\">{isLoggedIn && <ContactsView />}</Route>\n      </Switch>\n      {isLoading && (\n        <StyledLoader type=\"ThreeDots\" color=\"#2c2c2c\" height={100} width={100} timeout={3000} />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\nimport contactsOperations from './contacts-operations';\n\nconst initialState = [];\n\nconst contacts = createSlice({\n  name: 'contacts',\n  initialState,\n  extraReducers: {\n    [contactsOperations.getContacts.fulfilled](state, action) {\n      return action.payload;\n      // state = [...state, action.payload];\n    },\n    [contactsOperations.postContact.fulfilled](state, action) {\n      return [...state, action.payload];\n      // return [...state, action.payload.data];\n    },\n    [contactsOperations.deleteContact.fulfilled](state, action) {\n      return state.filter(({ id }) => id !== action.payload);\n    },\n    [contactsOperations.patchContact.fulfilled](state, action) {\n      return [...state.filter(({ id }) => id !== action.payload.id), action.payload];\n    },\n  },\n});\n\n// export const { addContact, deleteContact } = contacts.actions;\nexport default contacts.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.login.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logout.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.getContactData.fulfilled](state, action) {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","// import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n// import * as operations from './contacts-operations';\n\n// const items = createReducer([], {\n//   // [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n//   [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n//   // [actions.deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n//   [operations.deleteContact.fulfilled]: (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n//   [operations.postContact.fulfilled]: (state, { payload }) => [...state, payload],\n// });\n\n// const isLoading = createReducer(false, {\n//   [operations.fetchContacts.pending]: () => true,\n//   [operations.fetchContacts.fulfilled]: () => false,\n//   [operations.fetchContacts.rejected]: () => false,\n//   [operations.deleteContact.pending]: () => true,\n//   [operations.deleteContact.fulfilled]: () => false,\n//   [operations.deleteContact.rejected]: () => false,\n//   [operations.postContact.pending]: () => true,\n//   [operations.postContact.fulfilled]: () => false,\n//   [operations.postContact.rejected]: () => false,\n// });\n\nexport default createReducer('', {\n  [actions.addFilter]: (_, { payload }) => payload,\n  [actions.resetFilter]: () => '',\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport actions from './modal-actions';\nimport { combineReducers } from 'redux';\n\nconst modalIsShow = createReducer(false, {\n  [actions.openModal]: () => true,\n  [actions.closeModal]: () => false,\n});\n\nconst modalContent = createReducer('', {\n  [actions.setModalContent]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  modalIsShow,\n  modalContent,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-slice';\nimport authSlice from './auth/auth-slice';\nimport filterReducer from './contacts/contacts-reducer';\nimport modalReducer from './modal/modal-reducers';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  auth: authSlice,\n  modal: modalReducer,\n});\n\nexport default configureStore({\n  reducer: rootReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}